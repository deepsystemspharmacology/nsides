#The UNIVERSE defines an execution environment. You will almost always use VANILLA. 
Universe = vanilla     
# EXECUTABLE is the program your job will run It's often useful 
# to create a shell script to "wrap" your actual work. 
Executable = ../eval_model_shallow_only.sh
Arguments = $(modelidx) lrc
Requirements = HAS_SINGULARITY == TRUE
+SingularityImage = "/cvmfs/singularity.opensciencegrid.org/tensorflow/tensorflow:latest/"
+SingularityBindCVMFS = True

should_transfer_files = IF_NEEDED
when_to_transfer_output = ON_EXIT
#transfer_input_files = nsides_scripts_lrc.tgz, shallow_out_$(modelidx)_0.tgz, shallow_out_$(modelidx)_1.tgz, shallow_out_$(modelidx)_2.tgz, shallow_out_$(modelidx)_3.tgz, shallow_out_$(modelidx)_4.tgz, shallow_out_$(modelidx)_5.tgz, shallow_out_$(modelidx)_6.tgz, shallow_out_$(modelidx)_7.tgz, shallow_out_$(modelidx)_8.tgz, shallow_out_$(modelidx)_9.tgz, shallow_out_$(modelidx)_10.tgz, shallow_out_$(modelidx)_11.tgz, shallow_out_$(modelidx)_12.tgz, shallow_out_$(modelidx)_13.tgz, shallow_out_$(modelidx)_14.tgz, shallow_out_$(modelidx)_15.tgz, shallow_out_$(modelidx)_16.tgz, shallow_out_$(modelidx)_17.tgz, shallow_out_$(modelidx)_18.tgz, shallow_out_$(modelidx)_19.tgz

transfer_input_files = ../nsides_scripts_lrc.tgz, LRC_FILES_TO_TRANSFER

transfer_output_files = results_$(modelidx)_lrc.tgz

# The LOG file is where HTCondor places information about your 
# job's status, success, and resource consumption. 
log           = eval_model_lrc_$(modelidx).log

# The standard output and error messages
output        = eval_model_lrc_$(modelidx).out
error         = eval_model_lrc_$(modelidx).error

# Set the requirement that the OASIS modules are available on the remote worker machine

# QUEUE is the "start button" - it launches any jobs that have been 
# specified thus far. 

#request_memory = 50000

#request_memory = 4000

request_memory = REDEFINE_MEMORY

stream_output = true
stream_error = true

#request_gpus = 1

Queue 1
