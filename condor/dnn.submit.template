#The UNIVERSE defines an execution environment. You will almost always use VANILLA. 
Universe = vanilla     
# EXECUTABLE is the program your job will run It's often useful 
# to create a shell script to "wrap" your actual work. 

Executable = REDEFINE_SCRIPT
Arguments = $(modelidx) $(input_int)
Requirements = HAS_SINGULARITY == TRUE
#+SingularityImage = "/cvmfs/singularity.opensciencegrid.org/tensorflow/tensorflow:latest/"
+SingularityImage = "/cvmfs/singularity.opensciencegrid.org/opensciencegrid/tensorflow:latest"
+SingularityBindCVMFS = True

should_transfer_files = IF_NEEDED
when_to_transfer_output = ON_EXIT
transfer_input_files = ../nsides_scripts.tgz
transfer_output_files = dnn_out_$(modelidx)_$(input_int).tgz

# The LOG file is where HTCondor places information about your 
# job's status, success, and resource consumption. 
log           = dnn_$(modelidx)_$(input_int).log

# The standard output and error messages
output        = dnn_$(modelidx)_$(input_int).out
error         = dnn_$(modelidx)_$(input_int).error

# Set the requirement that the OASIS modules are available on the remote worker machine

# QUEUE is the "start button" - it launches any jobs that have been 
# specified thus far. 

#request_memory = 50000

request_memory = REDEFINE_MEMORY

#request_gpus = 1

stream_output = true
stream_error = true

periodic_release = (NumJobStarts < 4) && ((CurrentTime - EnteredCurrentStatus) > 30*60)
periodic_remove =  (NumJobStarts > 3) 

Queue 1
